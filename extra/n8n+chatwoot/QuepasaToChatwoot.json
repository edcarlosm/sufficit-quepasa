{
  "name": "QuepasaToChatwoot",
  "nodes": [
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.participant}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "name": "Has Participant ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -6920,
        140
      ],
      "id": "813e1570-6153-4074-a3e3-37fe77ca3e47"
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "participant.chatwoot",
              "value": "={{$json}}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set Participant Contact",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -6120,
        -40
      ],
      "id": "b77722ea-8c17-4618-a3f4-2097027f2da1"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.conversation.status}}",
              "operation": "notEqual",
              "value2": "open"
            }
          ]
        }
      },
      "name": "Open ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1540,
        740
      ],
      "id": "f7edfe24-76ef-46cd-9ee3-0ea9b5c36189"
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{$json[\"extra\"][\"cwhost\"]}}/api/v1/accounts/{{$json[\"extra\"][\"account\"]}}/conversations",
        "allowUnauthorizedCerts": true,
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "status",
              "value": "open"
            },
            {
              "name": "inbox_id",
              "value": "={{$json[\"extra\"][\"inbox\"]}}"
            },
            {
              "name": "contact_id",
              "value": "={{$json.chat.chatwoot.id}}"
            }
          ]
        },
        "headerParametersUi": {
          "parameter": [
            {
              "name": "api_access_token",
              "value": "={{$json[\"extra\"][\"atoken\"]}}"
            }
          ]
        }
      },
      "name": "Create a Conversation",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        -2240,
        520
      ],
      "id": "d3e4d2ee-510b-484f-b041-6038333b0dbb",
      "notes": "Important to use \"source_id\" to respond messages"
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "conversation.id",
              "value": "={{$json.id}}"
            },
            {
              "name": "conversation.status",
              "value": "={{$json.status}}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -2000,
        520
      ],
      "id": "b65fcaee-1d8e-4a3e-80ec-d72f518fcf80"
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{$json[\"extra\"][\"cwhost\"]}}/api/v1/accounts/{{$json[\"extra\"][\"account\"]}}/conversations/{{$json[\"conversation\"][\"id\"]}}/toggle_status",
        "allowUnauthorizedCerts": true,
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "status",
              "value": "open"
            }
          ]
        },
        "headerParametersUi": {
          "parameter": [
            {
              "name": "api_access_token",
              "value": "={{$json[\"extra\"][\"atoken\"]}}"
            }
          ]
        }
      },
      "name": "Open a Conversation",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        -1280,
        520
      ],
      "id": "a4c020bd-3184-4a8a-8099-9f65e2457a0d"
    },
    {
      "parameters": {
        "url": "={{$json.cwhost}}/api/v1/accounts/{{$json.account}}/contacts/{{$json.contactid}}/conversations",
        "allowUnauthorizedCerts": true,
        "options": {},
        "headerParametersUi": {
          "parameter": [
            {
              "name": "api_access_token",
              "value": "={{$json.utoken}}"
            }
          ]
        },
        "queryParametersUi": {
          "parameter": [
            {}
          ]
        }
      },
      "name": "Get Conversation",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        -3980,
        1140
      ],
      "id": "4fb9e66c-9793-4c64-8d20-1b3f74c13d32",
      "retryOnFail": true,
      "notes": "Missing filter by:\nContact Id\nInbox Id\nStatus = open | pending"
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json[\"chat\"][\"id\"].contains(\"@broadcast\") ?? true}}",
              "operation": "notEqual",
              "value2": true
            }
          ]
        }
      },
      "name": "Not Broadcast ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -11220,
        760
      ],
      "id": "1f2ebf86-cc12-4cb8-b058-83fbd7038f80"
    },
    {
      "parameters": {
        "mode": "multiplex"
      },
      "name": "Merge3",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 1,
      "position": [
        -3740,
        1060
      ],
      "id": "4d8442b4-893a-45a5-a31a-a50a4c98fc3a"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "to-chatwoot",
        "options": {}
      },
      "id": "63cf9673-56d7-452a-bf0e-a22d12bb43f2",
      "name": "Webhook Chatwoot",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -11440,
        760
      ],
      "webhookId": "f0d0e1da-e8cf-4956-8715-dccf5fe3c892"
    },
    {
      "parameters": {
        "baseUrl": "={{$json[\"extra\"][\"cwhost\"]}}",
        "sourceId": "={{$json[\"participant\"][\"hex\"]}}",
        "name": "={{$json[\"participant\"][\"title\"]}}",
        "inboxId": "={{$json[\"extra\"][\"inbox\"]}}",
        "phoneNumber": "={{$json[\"participant\"][\"phone\"]}}",
        "operation": "publicContactCreate",
        "inboxIdentifier": "={{$json[\"extra\"][\"identifier\"]}}"
      },
      "id": "06358804-2dc4-4d79-92d6-b0cd9a714b97",
      "name": "GetAndCreate Participant",
      "type": "@sufficit/n8n-nodes-chatwoot.chatwoot",
      "typeVersion": 1,
      "position": [
        -6600,
        -20
      ],
      "executeOnce": true,
      "continueOnFail": true
    },
    {
      "parameters": {
        "respondWith": "noData",
        "options": {}
      },
      "id": "5932ac09-e6d0-4a84-a050-dcf35b91868f",
      "name": "Broadcast Message",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -10900,
        880
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.conversation?.id}}",
              "operation": "isEmpty"
            }
          ]
        }
      },
      "name": "Should Create a New Conversation Thread ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -2740,
        720
      ],
      "alwaysOutputData": false,
      "id": "62d121ce-badd-47c3-b5af-211c632d745d"
    },
    {
      "parameters": {
        "content": "## Follow to Chatwoot",
        "height": 262.50469912086913,
        "width": 251.48817318430855
      },
      "id": "f5d4028f-918e-4ff2-8eeb-d10074c2a5e3",
      "name": "Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        60,
        700
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.payload.content ?? '' }}",
              "operation": "startsWith",
              "value2": "/invite"
            }
          ]
        }
      },
      "id": "a4eb77f5-d256-4989-aa3c-72e55da3a056",
      "name": "If Invite Command",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        640,
        780
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json.fromme == true}}"
            }
          ]
        }
      },
      "id": "2f130785-9e9b-4605-83a1-7fd9af193ba3",
      "name": "Should Send Greetings ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -2220,
        180
      ]
    },
    {
      "parameters": {
        "workflowId": "4"
      },
      "id": "d344ce29-408a-426c-a669-40803795ffb0",
      "name": "Throw To Greetings Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        -1760,
        180
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "mode": "chooseBranch"
      },
      "id": "5195af7b-faf1-4589-bf83-5eb99140fc9b",
      "name": "Wait For Create a Conversation",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        -1980,
        180
      ]
    },
    {
      "parameters": {
        "workflowId": "6"
      },
      "id": "ec9146b3-f833-4ebf-8aa2-476b9551fb9f",
      "name": "Throw To Quepasa Chat Control Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        960,
        460
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "content": "## Getting and Filtering Conversations\n",
        "height": 389.53056603773587,
        "width": 1524.686663072776
      },
      "id": "96317c09-f63f-45fe-a49e-aa0f7a8efe75",
      "name": "Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4500,
        940
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "cwhost",
              "value": "={{$json[\"extra\"][\"cwhost\"]}}"
            },
            {
              "name": "account",
              "value": "={{$json[\"extra\"][\"account\"]}}"
            },
            {
              "name": "inbox",
              "value": "={{$json[\"extra\"][\"inbox\"]}}"
            },
            {
              "name": "utoken",
              "value": "={{$json[\"extra\"][\"utoken\"]}}"
            },
            {
              "name": "chatid",
              "value": "={{$json.chat.id}}"
            },
            {
              "name": "contactid",
              "value": "={{$json.chat.chatwoot.id}}"
            }
          ]
        },
        "options": {}
      },
      "id": "66837089-be39-4f16-8140-2dba6925f8f7",
      "name": "Set Filter Conversation Parameters",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -4180,
        1040
      ]
    },
    {
      "parameters": {
        "jsCode": "const validStatus = [\"pending\", \"snoozed\", \"open\"];\nfunction FilterByStatus(conversation){\n  if(!conversation) return false;\n  return validStatus.includes(conversation.status);\n}\n\n\nfor (const item of $input.all()){\n  if(item.json.payload){\n\n      // applying filters\n      const conversations = item.json.payload.filter((e) => FilterByStatus(e));      \n      item.json.payload = conversations?.shift();\n  } \n}\n\nreturn $input.all();"
      },
      "id": "03b4c05a-276c-4fb7-b610-3bbc9ee14630",
      "name": "Filter Open|Pend|Snooze",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        -3540,
        1060
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "8c200c08-c3f9-4be4-8cef-65e541e34564",
      "name": "Follow To Chat Contact Create",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        -9440,
        980
      ],
      "notesInFlow": true,
      "notes": "not need to be Multplex, only 1 first. But its bugged !!!"
    },
    {
      "parameters": {
        "baseUrl": "={{$json[\"extra\"][\"cwhost\"]}}",
        "accessToken": "={{$json[\"extra\"][\"utoken\"]}}",
        "resource": "contact",
        "accountId": "={{$json[\"extra\"][\"account\"]}}",
        "sourceId": "={{$json[\"chat\"][\"hex\"]}}",
        "operation": "contactCreate",
        "contactIdentifier": "={{$json[\"chat\"][\"id\"]}}",
        "name": "={{$json[\"chat\"][\"title\"]}}"
      },
      "id": "cd5709bd-87da-4c1a-b905-f9d865ddf4fb",
      "name": "Create Chat Contact",
      "type": "@sufficit/n8n-nodes-chatwoot.chatwoot",
      "typeVersion": 1,
      "position": [
        -8800,
        1080
      ]
    },
    {
      "parameters": {
        "content": "## Group Participant Contact\n",
        "height": 519.0878188679243,
        "width": 1758.1722428032342
      },
      "id": "afb8bbca-e24c-42fe-9f50-5e4d26a0a12c",
      "name": "Note5",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -7220,
        -120
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "options": {}
      },
      "name": "Clearing Participant",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -6120,
        160
      ],
      "id": "79aace69-87e6-4cb2-b5b9-9013d0f3a771"
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "extra",
              "value": "={{$json.extra}}"
            },
            {
              "name": "chat",
              "value": "={{$json.chat}}"
            },
            {
              "name": "participant",
              "value": "={{$json.participant}}"
            }
          ]
        },
        "options": {}
      },
      "id": "c332fcb9-ca8c-48e4-a383-bb080b13914f",
      "name": "Clearing Payload For Contacts",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -10540,
        980
      ]
    },
    {
      "parameters": {
        "jsCode": "function a2hex(str) {\n  var arr = [];\n  for (var i = 0, l = str.length; i < l; i ++) {\n    var hex = Number(str.charCodeAt(i)).toString(16);\n    arr.push(hex);\n  }\n  return arr.join('');\n}\n\nfor (const item of $input.all()) {\n  let body = item.json;\n  if(body){\n    \n    // Covering participant id\n    if(body.participant){\n\n      if(!body.participant.id || body.participant.id.length == 0)\n      {\n        delete body.participant;\n      } \n      else {\n        body.participant.phone = \"+\" + body.participant.id.split('@').shift();\n        body.participant.hex = a2hex(body.participant.id);\n      }\n    }\n\n    // Covering chat id\n    if(body.chat.id){\n      if(!body.chat.id.endsWith('@g.us')){\n        body.chat.phone = \"+\" + body.chat.id.split('@').shift();\n      } else {\n        // adding contact suffix\n        if(body.chat.title){\n          if(!body.chat.title.endsWith('(GROUP)')) {\n            body.chat.title = body.chat.title + ' (GROUP)'\n          }\n        } else {\n          body.chat.title = 'UNKNOWN (GROUP)'\n        }\n      }\n      body.chat.hex = a2hex(body.chat.id);\n    }\n  }\n}\nreturn $input.all();"
      },
      "id": "0c4fcc25-08c4-432a-acf4-e2c802c30aeb",
      "name": "Cover Ids & Set Phone",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        -10320,
        980
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "extra",
              "value": "={{$json.extra}}"
            },
            {
              "name": "participant",
              "value": "={{$json.participant}}"
            }
          ]
        },
        "options": {}
      },
      "id": "32175976-3e36-488e-bab6-9792b5c9f894",
      "name": "Set Participant Payload",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -7120,
        140
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "extra",
              "value": "={{$json.body.extra}}"
            },
            {
              "name": "chat",
              "value": "={{$json.body.chat}}"
            },
            {
              "name": "participant",
              "value": "={{$json.body.participant}}"
            },
            {
              "name": "id",
              "value": "={{$json.body.id}}"
            },
            {
              "name": "timestamp",
              "value": "={{$json.body.timestamp}}"
            },
            {
              "name": "text",
              "value": "={{$json.body.text}}"
            },
            {
              "name": "inreply",
              "value": "={{$json.body.inreply}}"
            },
            {
              "name": "attachment",
              "value": "={{$json.body.attachment}}"
            }
          ],
          "number": [
            {
              "name": "type",
              "value": "={{$json.body.type}}"
            }
          ],
          "boolean": [
            {
              "name": "fromme",
              "value": "={{$json.body.fromme}}"
            }
          ]
        },
        "options": {}
      },
      "id": "d03f860f-611c-4e9c-80b4-d9ebeb403ec1",
      "name": "Clearing Payload For Workflow",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -10900,
        660
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.error}}",
              "operation": "isEmpty"
            }
          ]
        }
      },
      "id": "1b80f10d-0356-406e-8035-db15e12da2ed",
      "name": "If Get Participant Sucess ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -6400,
        -20
      ]
    },
    {
      "parameters": {},
      "id": "6e1fd46c-210b-4249-af88-ab5a61587cf9",
      "name": "On clicking 'execute'",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -11640,
        560
      ]
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field\n// called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  item.json.body = {\n    \"id\": \"9CA1CE14D7BA78277A\", \"timestamp\": \"2022-10-27T21:13:43Z\", \"type\": 5, \"chat\": { \"id\": \"5521967609095@s.whatsapp.net\", \"title\": \"Hugo Deco\" }, \"text\": \"ok\", \"fromme\": false, \"frominternal\": false, \"extra\": { \"account\": \"1\", \"atoken\": \"trBsc8d2eoUH5YxKuGZFNxvE\", \"cwhost\": \"https://chatwoot.sufficit.com.br\", \"identifier\": \"9ZvPUgykri2EwZa7pbNXksbo\", \"inbox\": \"11\", \"qphost\": \"http://127.0.0.1:31000\", \"qptoken\": \"8eb313f2-8a9b-46a0-93ef-541b8f75106a\", \"utoken\": \"WgpaFrGS878Cm5rfjVrY2RkL\" }\n  }\n}\n\nreturn $input.all();"
      },
      "id": "f927f1e3-389c-4bad-b1a5-0d8880267811",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        -11440,
        560
      ]
    },
    {
      "parameters": {},
      "id": "929e4aea-3404-4494-be3d-21d7be80f182",
      "name": "Deliver Participant Contact Payload",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -5660,
        60
      ]
    },
    {
      "parameters": {
        "errorMessage": "chat not processed "
      },
      "id": "5136bcdf-6ee1-49db-b1cf-378d268ccac8",
      "name": "Stop And Error",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -7780,
        840
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json?.payload?.id}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "f9872267-f1d8-46dd-801d-a344068726c3",
      "name": "If Chat Contact Exists",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -9060,
        980
      ]
    },
    {
      "parameters": {
        "content": "## Chat Contact\n",
        "height": 519.0878188679243,
        "width": 1764.5342913207542
      },
      "id": "70402150-e8f6-4930-855c-e30e9fc11fcf",
      "name": "Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -10080,
        780
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "5ea2d03d-b447-4f5d-b5be-92ae555725cb",
      "name": "Parameters + Contacts1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        -8160,
        680
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.participant ?? undefined}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "5b5e6091-cec0-4bcb-9076-9c17854edc97",
      "name": "If Group ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -7680,
        660
      ],
      "notesInFlow": true,
      "notes": "Always false for now"
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "e8615a8e-dda3-416d-b0bd-21733a5088c6",
      "name": "Parameters + Contacts",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        -5180,
        640
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "chat.chatwoot.source_id",
              "value": "={{$json.chat.hex}}"
            }
          ],
          "number": [
            {
              "name": "chat.chatwoot.id",
              "value": "={{$json.payload.id}}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set Chat Chatwoot Info",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -8800,
        880
      ],
      "id": "1f452d3e-7bb3-405f-8edb-5b5195771eeb"
    },
    {
      "parameters": {},
      "id": "dcdbd981-cd67-43f0-b008-9b30704c9b90",
      "name": "new payload",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -4760,
        700
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "conversation.id",
              "value": "={{$json.payload?.id}}"
            },
            {
              "name": "conversation.status",
              "value": "={{$json.payload?.status}}"
            }
          ]
        },
        "options": {}
      },
      "id": "2b5f54cc-cfae-4bed-96eb-a900b81a2658",
      "name": "Set Filter Conversation Parameters1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -3260,
        1060
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "0f7365e0-5b2c-4462-b320-b8a5ea50d0ef",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        -2980,
        720
      ]
    },
    {
      "parameters": {},
      "id": "340b56b9-d776-45d7-b109-70268580fd15",
      "name": "NoOp - Opening Conversation1",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -2480,
        520
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "d50ce618-91b9-497e-987f-3fa8b95471fb",
      "name": "Wait For Create a Conversation1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        -1740,
        680
      ]
    },
    {
      "parameters": {},
      "id": "7a36155b-81f5-480f-89f8-40e4cbd91903",
      "name": "NoOp - Opening Conversation",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -700,
        760
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "694b011a-acbb-4bba-9b8f-daba77f703c2",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        -940,
        700
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "payload.source_id",
              "value": "={{$json.payload.contact_inbox.source_id}}"
            }
          ],
          "number": [
            {
              "name": "payload.id",
              "value": "={{$json.payload.contact.id}}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set Chat Chatwoot Info1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -8520,
        1080
      ],
      "id": "24e4b62d-87ac-4919-9864-88e68ff7a2ee"
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "payload.content",
              "value": "={{$json.text}}"
            },
            {
              "name": "payload.message_type",
              "value": "={{$json.fromme?\"outgoing\":\"incoming\"}}"
            },
            {
              "name": "payload.echo_id",
              "value": "={{$json.id}}"
            },
            {
              "name": "payload.attachment",
              "value": "={{$json.attachment}}"
            },
            {
              "name": "chatid",
              "value": "={{$json.chat.id}}"
            },
            {
              "name": "conversation",
              "value": "={{$json.conversation}}"
            },
            {
              "name": "extra",
              "value": "={{$json.extra}}"
            },
            {
              "name": "hex",
              "value": "={{$json.chat.chatwoot.source_id}}"
            },
            {
              "name": "participant.title",
              "value": "={{$json.participant?.title}}"
            }
          ],
          "boolean": [
            {
              "name": "payload.private",
              "value": "={{ $json.payload?.private ?? false }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Chatwoot Message Payload",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        140,
        780
      ],
      "id": "2b5459e8-27fe-4ad8-a402-e463d73e4a2c"
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "conversation.status",
              "value": "={{$json.payload.current_status}}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set Updated Conversation Status",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -1100,
        520
      ],
      "id": "41cdf633-7c3e-4a48-b006-5e2ec6e2bc05"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "payload.content_type",
              "value": "text"
            }
          ]
        },
        "options": {}
      },
      "name": "Payload Constants",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        400,
        780
      ],
      "id": "9dfa2f0b-8c71-4015-b47d-acc9045d9735"
    },
    {
      "parameters": {
        "baseUrl": "={{$json[\"extra\"][\"cwhost\"]}}",
        "accessToken": "={{$json[\"extra\"][\"utoken\"]}}",
        "resource": "contact",
        "accountId": "={{$json[\"extra\"][\"account\"]}}",
        "operation": "contactSearch",
        "contactSearchQuery": "={{$json[\"chat\"][\"id\"]}}"
      },
      "id": "7c982ee0-52f0-40a9-913f-ca593b3072ff",
      "name": "Get Chat Contact",
      "type": "@sufficit/n8n-nodes-chatwoot.chatwoot",
      "typeVersion": 1,
      "position": [
        -9800,
        900
      ],
      "notesInFlow": false
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "payload",
              "value": "={{$json.payload.shift()}}"
            },
            {
              "name": "meta",
              "value": "={{null}}"
            }
          ]
        },
        "options": {}
      },
      "id": "4d99b473-bb46-4cfc-b614-27cb67171500",
      "name": "Get Chat Contact Response Payload",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -9640,
        900
      ]
    },
    {
      "parameters": {
        "workflowId": "7"
      },
      "id": "dc8b8b64-7fed-47b4-8dad-55b819aded96",
      "name": "Execute Workflow Post To Chatwoot",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        960,
        800
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "jsCode": "function hex2a3b(hexx) {\n    var hex = hexx.toString(); //force conversion\n    var str = '';\n    for (var i = 0; i < hex.length; i += 2)\n        str += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\n    return str;\n}\n\nfunction ChatIdFromSender(sender){\n    if(sender){\n        \n        // new variable to identify external id\n        if(sender.identifier){\n            return sender.identifier;\n        }        \n\n        // from priority quepasa attribute\n        if(sender.custom_attributes && sender.custom_attributes.quepasa) {\n            return sender.custom_attributes.quepasa;\n        }\n\n        if(sender.source_id){\n            return hex2a3b(sender.source_id);\n        }\n\n        if(sender.email){\n            if(sender.email.endsWith('@g.us') || sender.email.endsWith('@s.whatsapp.net')){\n                return sender.email;\n            }\n        }\n    }\n}\n\n\nfor (const item of $input.all()){    \n  const chatid = item.json.chatid;\n  if(item.json.data){\n    if(item.json.data.payload){\n\n        let conversation = item.json.data.payload.find((e) => e.meta && ChatIdFromSender(e.meta.sender) == chatid);\n        item.json.payload = conversation;\n    }\n  }\n}\n\nreturn $input.all();"
      },
      "id": "96bcf1a5-58ed-43d0-9e5f-8e6e87f9e98f",
      "name": "Filter by ChatId (deprecated)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        -3540,
        1260
      ],
      "disabled": true
    },
    {
      "parameters": {
        "content": "## Call Request ?",
        "height": 354.0653279804751,
        "width": 446.26260184928856
      },
      "id": "ff143a7a-1216-4737-bc80-deea7ac5a77c",
      "name": "Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -500,
        560
      ]
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{$json.type}}",
              "operation": "equal",
              "value2": 8
            }
          ]
        }
      },
      "id": "037af2e7-3d76-4411-ab10-0e5ba5df8980",
      "name": "If Call Request ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -420,
        760
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "text",
              "value": "## (Sistema) O Usuário requisitou uma chamada de voz !\n----------------------------------------------------"
            }
          ],
          "boolean": [
            {
              "name": "payload.private",
              "value": true
            }
          ]
        },
        "options": {}
      },
      "id": "9c1917c2-19a8-4a06-9d22-cebb09a15973",
      "name": "Set Text Content For Call Request",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -200,
        620
      ]
    },
    {
      "parameters": {
        "workflowId": "8"
      },
      "id": "dcc63f86-f26c-4959-a2e8-47d2db329119",
      "name": "Throw To WebCallBack Telephony Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        140,
        420
      ],
      "executeOnce": true,
      "continueOnFail": true
    },
    {
      "parameters": {},
      "id": "6cff8aa4-c6d1-4c3b-8676-8976d073b681",
      "name": "Deliver Chat Contact Payload",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -8520,
        880
      ]
    },
    {
      "parameters": {},
      "id": "3674ce24-d097-43bc-b860-645b08cd948b",
      "name": "Discover Chat Contact",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -10000,
        1000
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json?.chat}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "d6ac4107-c26b-4bb2-8ab6-bdb337544f62",
      "name": "If Chat Exists ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -8000,
        680
      ]
    }
  ],
  "pinData": {},
  "connections": {
    "Has Participant ?": {
      "main": [
        [
          {
            "node": "GetAndCreate Participant",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Clearing Participant",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Participant Contact": {
      "main": [
        [
          {
            "node": "Deliver Participant Contact Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Open ?": {
      "main": [
        [
          {
            "node": "Open a Conversation",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "NoOp - Opening Conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create a Conversation": {
      "main": [
        [
          {
            "node": "Set",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait For Create a Conversation",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Set": {
      "main": [
        [
          {
            "node": "Wait For Create a Conversation1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Open a Conversation": {
      "main": [
        [
          {
            "node": "Set Updated Conversation Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Conversation": {
      "main": [
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Not Broadcast ?": {
      "main": [
        [
          {
            "node": "Clearing Payload For Workflow",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Broadcast Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge3": {
      "main": [
        [
          {
            "node": "Filter Open|Pend|Snooze",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook Chatwoot": {
      "main": [
        [
          {
            "node": "Not Broadcast ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GetAndCreate Participant": {
      "main": [
        [
          {
            "node": "If Get Participant Sucess ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Should Create a New Conversation Thread ?": {
      "main": [
        [
          {
            "node": "NoOp - Opening Conversation1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait For Create a Conversation1",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "Open ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Invite Command": {
      "main": [
        [
          {
            "node": "Throw To Quepasa Chat Control Workflow",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Execute Workflow Post To Chatwoot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Should Send Greetings ?": {
      "main": [
        [
          {
            "node": "Wait For Create a Conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait For Create a Conversation": {
      "main": [
        [
          {
            "node": "Throw To Greetings Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Filter Conversation Parameters": {
      "main": [
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get Conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Open|Pend|Snooze": {
      "main": [
        [
          {
            "node": "Set Filter Conversation Parameters1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Follow To Chat Contact Create": {
      "main": [
        [
          {
            "node": "If Chat Contact Exists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Chat Contact": {
      "main": [
        [
          {
            "node": "Set Chat Chatwoot Info1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clearing Participant": {
      "main": [
        [
          {
            "node": "Deliver Participant Contact Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clearing Payload For Contacts": {
      "main": [
        [
          {
            "node": "Cover Ids & Set Phone",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cover Ids & Set Phone": {
      "main": [
        [
          {
            "node": "Discover Chat Contact",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Participant Payload": {
      "main": [
        [
          {
            "node": "Has Participant ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clearing Payload For Workflow": {
      "main": [
        [
          {
            "node": "Clearing Payload For Contacts",
            "type": "main",
            "index": 0
          },
          {
            "node": "Parameters + Contacts1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Get Participant Sucess ?": {
      "main": [
        [
          {
            "node": "Set Participant Contact",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "On clicking 'execute'": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Not Broadcast ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Chat Contact Exists": {
      "main": [
        [
          {
            "node": "Set Chat Chatwoot Info",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Create Chat Contact",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parameters + Contacts1": {
      "main": [
        [
          {
            "node": "If Chat Exists ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Group ?": {
      "main": [
        [
          {
            "node": "Set Participant Payload",
            "type": "main",
            "index": 0
          },
          {
            "node": "Parameters + Contacts",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "new payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Deliver Participant Contact Payload": {
      "main": [
        [
          {
            "node": "Parameters + Contacts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parameters + Contacts": {
      "main": [
        [
          {
            "node": "new payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Chat Chatwoot Info": {
      "main": [
        [
          {
            "node": "Deliver Chat Contact Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "new payload": {
      "main": [
        [
          {
            "node": "Set Filter Conversation Parameters",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Filter Conversation Parameters1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Should Create a New Conversation Thread ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NoOp - Opening Conversation1": {
      "main": [
        [
          {
            "node": "Create a Conversation",
            "type": "main",
            "index": 0
          },
          {
            "node": "Should Send Greetings ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait For Create a Conversation1": {
      "main": [
        [
          {
            "node": "Open ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NoOp - Opening Conversation": {
      "main": [
        [
          {
            "node": "If Call Request ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "NoOp - Opening Conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Chat Chatwoot Info1": {
      "main": [
        [
          {
            "node": "If Chat Contact Exists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Chatwoot Message Payload": {
      "main": [
        [
          {
            "node": "Payload Constants",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Updated Conversation Status": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Payload Constants": {
      "main": [
        [
          {
            "node": "If Invite Command",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Chat Contact": {
      "main": [
        [
          {
            "node": "Get Chat Contact Response Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Chat Contact Response Payload": {
      "main": [
        [
          {
            "node": "Follow To Chat Contact Create",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Call Request ?": {
      "main": [
        [
          {
            "node": "Set Text Content For Call Request",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Chatwoot Message Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Text Content For Call Request": {
      "main": [
        [
          {
            "node": "Chatwoot Message Payload",
            "type": "main",
            "index": 0
          },
          {
            "node": "Throw To WebCallBack Telephony Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Deliver Chat Contact Payload": {
      "main": [
        [
          {
            "node": "Parameters + Contacts1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Discover Chat Contact": {
      "main": [
        [
          {
            "node": "Get Chat Contact",
            "type": "main",
            "index": 0
          },
          {
            "node": "Follow To Chat Contact Create",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "If Chat Exists ?": {
      "main": [
        [
          {
            "node": "If Group ?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Stop And Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {},
  "versionId": "04b41240-dd15-4bd5-a7ea-308c96e2bf79",
  "id": "3",
  "meta": {
    "instanceId": "2b4ab318d4f8eba20155e50db9998481bc305e3588e42ee69176091736c9d07e"
  },
  "tags": [
    {
      "createdAt": "2022-10-13T04:02:06.783Z",
      "updatedAt": "2022-10-13T04:02:06.783Z",
      "id": "1",
      "name": "SUFFICIT"
    }
  ]
}